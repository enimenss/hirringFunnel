@model HiringFunnel.DTO.ContactEditView

@using HiringFunnel.DTO;

@{
    ViewBag.Title = "Contact";
}


@{
    List<TechnologyView> techno = (List<TechnologyView>)TempData["Techno"];
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="container">

    <div class="form-horizontal">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="row">
            <div class="col-md-6">
                <div class="form-group"><h4> Osnovne Informacije</h4></div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                            </div>
                        </div>
                 
                </div>
            <div class="col-md-6">
                <div class="form-group"><h4>Kontakt Podaci</h4></div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.LinkedIn, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.LinkedIn, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LinkedIn, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        <div class="row">
            <div class="form-group"><h4>Iskustvo</h4></div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Seniority, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <select name="Seniority" id="Seniority" class="form-control">
                            <option value="0" @(Model.Seniority == SeniorityLevel.Entry ? "selected" : "")>Entry</option>
                            <option value="1" @(Model.Seniority == SeniorityLevel.Junior ? "selected" : "")>Junior</option>
                            <option value="2" @(Model.Seniority == SeniorityLevel.Medior ? "selected" : "")>Medior</option>
                            <option value="5" @(Model.Seniority == SeniorityLevel.Senior ? "selected" : "")>Senior</option>
                        </select>
                    </div>
                </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Technologies, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <select id="Technologies" name="techno" multiple="multiple" size="5" class="form-control">
                        @foreach (TechnologyView tech in techno)
                        {
                            bool pom = false;
                            if (Model.Technologies.Where(x => x.Id == tech.Id).SingleOrDefault() != null)
                            {
                                pom = true;
                            }

                            <option value=@tech.Id selected=@(pom ? true :false) >@tech.Name</option>
                        }
                    </select>
                </div>
            </div>

            </div>
            


            </div>
            
        </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
